using System.Net.Http.Headers;

namespace SingleElementinaSortedArray
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] nums = [1, 1, 2, 2, 3, 3, 4, 4, 8];
            Solution solution = new Solution();
            Console.WriteLine(solution.SingleNonDuplicate(nums));
        }
        public class Solution
        {
            public int SingleNonDuplicate(int[] nums)
            {
                for (int i = 0; i < nums.Length; i = i + 2)
                {
                    int fIndex = i;
                    int lIndex = BinarySearchLastIndex(nums, nums[i]);

                    if(fIndex == lIndex)
                    {
                        return nums[fIndex];
                    }
                }
                return 0;
            }
            public static int BinarySearchLastIndex(int[] nums, int target)
            {
                int l = 0; int r = nums.Length - 1; int lastIndex = -1;

                while(l <= r)
                {
                    int mid = l + (r - l) / 2;
                    if (nums[mid] == target)
                    {
                        lastIndex = mid;
                        l = mid + 1;
                    }
                    else if (nums[mid] < target)
                    {
                        l = mid + 1;
                    }
                    else
                    {
                        r = mid - 1;
                    }
                }
                return lastIndex;
            }
        }
    }
}
