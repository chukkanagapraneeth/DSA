namespace SearchinRotatedSortedArrayII
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] nums = [2, 5, 6, 0, 0, 1, 2];
            int target = 3;
            Solution solution = new Solution();
            Console.WriteLine(solution.Search(nums, target));
        }
        public class Solution
        {
            public bool Search(int[] nums, int target)
            {
                HashSet<int> set = new HashSet<int>(nums);

                int[] arr = [.. set];

                int l = 0;
                int r = arr.Length - 1;

                while (l <= r)
                {
                    int mid = l + (r - l) / 2;
                    if (arr[mid] == target)
                    {
                        return true;
                    }
                    if(arr[l] <= arr[mid])
                    {
                        if (arr[l] <= target && target < arr[mid])
                        {
                            r = mid - 1;
                        }
                        else
                        {
                            l = mid + 1;
                        }
                    }
                    else
                    {
                        if (arr[mid] < target && target <= arr[r])
                        {
                            l = mid + 1;
                        }
                        else
                        {
                            r = mid - 1;
                        }
                    }
                }

                return false;
            }
        }
    }
}
